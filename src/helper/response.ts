export const responseMessage = {
    appleAccountError: "Your account has been deleted,Please remove account from Setting > Your account > Password & Security > Apps using Apple ID > Photographer > Click to stop using Apple ID",
    loginSuccess: "Login successful!",
    signupSuccess: "Account created successful!",
    waitList: "Join waitlist now!",
    verifyLink: "Verification link send successful!",
    onlyUserRegister: "Only user can register!",
    internalServerError: "Internal Server Error!",
    alreadyEmail: "Email is already registered!",
    emailVerify: "VERICATION CMPLETE ! Thank you your email has now been verified please return to the Campfire app and log in.",
    alreadyUser: "User is already registered!",
    joinWaitlist: "Please join waitlist noe!",
    alreadyUserWaitlist: "User is already registered waitlist!",
    alreadyMobileNo: "Mobile number is already registered!",
    emailUnverified: "enter the OTP below  to verify  your Email address!",
    accountBlock: "Your account has been blocked!",
    invalidUserPasswordEmail: "You have entered an invalid username or password!",
    invalidOldPassword: "You have entered an invalid old password!",
    invalidOTP: "Invalid OTP!",
    expireOTP: "OTP has been expired!",
    OTPverified: "OTP has been verified successfully!",
    invalidEmail: "You have entered an invalid username or password! ",
    emailVerificationComplete: "Email verification complete!",
    invalidIdTokenAndAccessToken: "You have entered an invalid idToken or accessToken!",
    errorMail: "Error in mail system!",
    resetPasswordSuccess: "Your password has been successfully reset!",
    resetPasswordError: "Error in reset password!",
    oldPasswordError: "You have entered the old password wrong!",
    passwordChangeSuccess: "Password has been changed!",
    passwordChangeError: "During password changing error in database!",
    invalidOldTokenReFreshToken: "You have entered an invalid old token or refresh token!",
    refreshTokenNotFound: "Refresh token not found!",
    tokenNotExpire: "Token has been not expired!",
    tokenExpire: "Token has been expired!",
    allMessageDelete: "All message has been deleted",
    refreshTokenSuccess: "A new token has been successfully generated!",
    differentToken: "Do not try a different token!",
    tokenNotFound: "We can't find tokens in header!",
    logout: "Logout Successful!",
    fileUploadSuccess: "Your requested file uploaded successfully!",
    addDataError: "Oops! Something went wrong!",
    buySubscription: 'Please buy a subscription!',
    buyCommercialLicense: 'Please buy a commercial license!',
    commercialLicenseNotExist: `You've request post commercial license does not exist! Please pass valid params`,
    extendedLicenseNotExist: `You've request post extended license does not exist! Please pass valid params`,
    buyExtendedLicense: 'Please buy a extended license!',
    downloadLimit: "Your download limit of 10 exceed!",
    paymentSuccess: "Payment successful!",
    purchaseSuccess: "purchase successful!",
    filterFailed: "Please Select a Vaild Filter",
    paymentFailed: "Payment fail!",
    decryptionError: "Please pass a valid encryption string!",
    decryptionSuccess: "Your data successfully decrypted!",
    encryptionSuccess: "Your data successfully encrypted!",
    encryptionError: "Please pass a valid decryption string!",
    accessDenied: "Access denied",
    invalidToken: "Invalid token",
    complaintTaken: "Engineer already runnig complaint",
    serialnumber: "serialNumbers is already taken!",
    dateError: "Must selected both date",
    deviceToken: "Device token Not Found!",
    complaintRunnig: "Complaint Already registered",
    verifyEmail: "Please verify your email",
    complaintRunnigatAssign: "Your assigning Complaint is being proccessed!",
    reportNotFound: "Please enter valid value in report",
    bowelMomentNotFound: "Please enter first of all bowel Moment",
    customMessage: (message: string): any => { return `${message[0].toUpperCase() + message.slice(1).toLowerCase()}` },
    alredyTaken: (message: any): any => { return `${message} is already exists!` },
    invalidId: (message: string): any => { return `invalid ${message}!` },
    dataAlreadyExist: (message: any): any => { return `Please change ${message}, ${message} is already exists!` },
    getDataSuccess: (message: string): any => { return `${message[0].toUpperCase() + message.slice(1).toLowerCase()} successfully retrieved!` },
    addDataSuccess: (message: string): any => { return `${message[0].toUpperCase() + message.slice(1).toLowerCase()} successfully added!` },
    getDataNotFound: (message: string): any => { return `We couldn't find the ${message.toLowerCase()} you requested!` },
    updateDataSuccess: (message: string): any => { return `${message[0].toUpperCase() + message.slice(1).toLowerCase()} has been successfully updated!` },
    updateDataError: (message: string): any => { return `${message[0].toUpperCase() + message.slice(1).toLowerCase()} updating time getting an error!` },
    deleteDataSuccess: (message: string): any => { return `Your ${message.toLowerCase()} has been successfully deleted!` },
    deleteDataNotSuccess: (message: string): any => { return `Your ${message.toLowerCase()} has been not successfully deleted!` },
}